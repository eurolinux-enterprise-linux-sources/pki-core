From 2cc391a17f8984192975035ef2005e03803f91ac Mon Sep 17 00:00:00 2001
From: Endi S. Dewata <edewata@redhat.com>
Date: Fri, 15 Jan 2016 22:08:29 +0100
Subject: [PATCH] Issuer DN encoding correction.

The CA has been modified to use the subject DN object of the
CA signing certificate as the issuer DN of the certificates
being issued in order to ensure encoding consistency.

Bug #1282977
---
 base/ca/src/com/netscape/ca/CAService.java         |   14 ++++++-
 .../src/com/netscape/ca/CertificateAuthority.java  |   41 +++++++++++++++++++-
 .../netscape/certsrv/ca/ICertificateAuthority.java |    3 +
 .../netscape/cms/profile/common/EnrollProfile.java |   19 ++++++++-
 .../com/netscape/cms/servlet/csadmin/CertUtil.java |   29 ++++++++++++-
 .../com/netscape/cmsutil/crypto/CryptoUtil.java    |   27 ++++++++++---
 .../src/netscape/security/x509/X509CertImpl.java   |    8 ++++
 .../src/netscape/security/x509/X509CertInfo.java   |    8 ++++
 8 files changed, 134 insertions(+), 15 deletions(-)

diff --git a/base/ca/src/com/netscape/ca/CAService.java b/base/ca/src/com/netscape/ca/CAService.java
index e5c0eca18f20759eafbb990b7f0cee2cb7fe07b4..f45644b28dee189e64350e9ece8b00acd90c5c43 100644
--- a/base/ca/src/com/netscape/ca/CAService.java
+++ b/base/ca/src/com/netscape/ca/CAService.java
@@ -771,8 +771,18 @@ public class CAService implements ICAService, IService {
         }
 
         try {
-            certi.set(X509CertInfo.ISSUER, 
-                new CertificateIssuerName(mCA.getX500Name()));
+            CertificateIssuerName issuer = mCA.getIssuerObj();
+            if (issuer != null) {
+                // this ensures the isserDN has the same encoding as the
+                // subjectDN of the CA signing cert
+                CMS.debug("CAService: issueX509Cert: reusing issuer object: " + issuer);
+                certi.set(X509CertInfo.ISSUER, issuer);
+
+            } else {
+                CMS.debug("CAService: issueX509Cert: creating new issuer object: " + mCA.getX500Name());
+                certi.set(X509CertInfo.ISSUER, new CertificateIssuerName(mCA.getX500Name()));
+            }
+
         } catch (CertificateException e) {
             mCA.log(ILogger.LL_FAILURE, CMS.getLogMessage("CMSCORE_CA_SET_ISSUER", e.toString()));
             throw new ECAException(CMS.getUserMessage("CMS_CA_SET_ISSUER_FAILED", rid));
diff --git a/base/ca/src/com/netscape/ca/CertificateAuthority.java b/base/ca/src/com/netscape/ca/CertificateAuthority.java
index 8210d7192fc1a41db4b29ec3e04eb50af44d3019..c728111f797e3307baea3289548e843a5e150099 100644
--- a/base/ca/src/com/netscape/ca/CertificateAuthority.java
+++ b/base/ca/src/com/netscape/ca/CertificateAuthority.java
@@ -93,6 +93,8 @@ public class CertificateAuthority implements ICertificateAuthority, ICertAuthori
     protected SigningUnit mOCSPSigningUnit;
     protected SigningUnit mCRLSigningUnit;
 
+    protected CertificateIssuerName mIssuerObj;
+    protected CertificateSubjectName mSubjectObj;
     protected X500Name mName = null;
     protected X500Name mCRLName = null;
     protected X500Name mOCSPName = null;
@@ -262,7 +264,7 @@ public class CertificateAuthority implements ICertificateAuthority, ICertAuthori
             initDefCaAttrs();
         } catch (EBaseException e) {
             if (CMS.isPreOpMode())
-                ;
+                CMS.debug("CertificateAuthority: Ignoring exception in pre-op mode: " + e);
             else
                 throw e;
         }
@@ -813,6 +815,14 @@ public class CertificateAuthority implements ICertificateAuthority, ICertAuthori
         return mName;
     }
 
+    public CertificateIssuerName getIssuerObj() {
+       return mIssuerObj;
+    }
+
+    public CertificateSubjectName getSubjectObj() {
+       return mSubjectObj;
+    }
+
     public X500Name getCRLX500Name() {
         return mCRLName;
     }
@@ -1123,6 +1133,22 @@ public class CertificateAuthority implements ICertificateAuthority, ICertAuthori
             IConfigStore caSigningCfg =
                 mConfig.getSubStore(PROP_SIGNING_SUBSTORE);
 
+            String caSigningCertStr = caSigningCfg.getString("cert", "");
+            if (caSigningCertStr.equals("")) {
+                CMS.debug("CertificateAuthority:initSigUnit: ca signing cert not found");
+
+            } else {
+                CMS.debug("CertificateAuthority:initSigUnit: ca signing cert found");
+                mCaCert = new X509CertImpl(CMS.AtoB(caSigningCertStr));
+                // this ensures the isserDN and subjectDN have the same encoding
+                // as that of the CA signing cert
+                mSubjectObj = mCaCert.getSubjectObj();
+                CMS.debug("CertificateAuthority:initSigUnit: subject: " + mSubjectObj);
+                // this mIssuerObj is the "issuerDN" obj for the certs this CA
+                // issues, NOT necessarily the isserDN obj of the CA signing cert
+                mIssuerObj = new CertificateIssuerName((X500Name)mSubjectObj.get(CertificateIssuerName.DN_NAME));
+            }
+
             mSigningUnit.init(this, caSigningCfg);
             CMS.debug("CA signing unit inited");
 
@@ -1219,11 +1245,22 @@ public class CertificateAuthority implements ICertificateAuthority, ICertAuthori
             }
             mOCSPCertChain = new CertificateChain(ocspImplchain);
             CMS.debug("in init - got OCSP chain from JSS.");
-            // init issuer name - take name from the cert.
 
             mCaX509Cert = mSigningUnit.getCert();
             mCaCert = new X509CertImpl(mCaX509Cert.getEncoded());
             getCASigningAlgorithms();
+
+            mSubjectObj = mCaCert.getSubjectObj();
+            if (mSubjectObj != null) {
+                // this ensures the isserDN and subjectDN have the same encoding
+                // as that of the CA signing cert
+                CMS.debug("CertificateAuthority:initSigUnit: subject: " + mSubjectObj);
+                // this mIssuerObj is the "issuerDN" obj for the certs this CA
+                // issues, NOT necessarily the isserDN obj of the CA signing cert
+                // unless the CA is self-signed
+                mIssuerObj = new CertificateIssuerName((X500Name)mSubjectObj.get(CertificateIssuerName.DN_NAME));
+            }
+
             mName = (X500Name) mCaCert.getSubjectDN();
 
             mCRLX509Cert = mCRLSigningUnit.getCert();
diff --git a/base/common/src/com/netscape/certsrv/ca/ICertificateAuthority.java b/base/common/src/com/netscape/certsrv/ca/ICertificateAuthority.java
index 0560f0a7c7e0dc0e850eeaf7315735747137fc81..55262a22b61bfbd0fea689ed5a99852512142627 100644
--- a/base/common/src/com/netscape/certsrv/ca/ICertificateAuthority.java
+++ b/base/common/src/com/netscape/certsrv/ca/ICertificateAuthority.java
@@ -494,4 +494,7 @@ public interface ICertificateAuthority extends ISubsystem {
      * @return processed times for OCSP requests
      */
     public long getOCSPTotalData();
+
+    public CertificateIssuerName getIssuerObj();
+    public CertificateSubjectName getSubjectObj();
 }
diff --git a/base/common/src/com/netscape/cms/profile/common/EnrollProfile.java b/base/common/src/com/netscape/cms/profile/common/EnrollProfile.java
index 89e3f7679787d57808f089891283d9e38a0fc868..49a9a1f1c0bc25a2829658fc6f7566bee33353be 100644
--- a/base/common/src/com/netscape/cms/profile/common/EnrollProfile.java
+++ b/base/common/src/com/netscape/cms/profile/common/EnrollProfile.java
@@ -23,6 +23,7 @@ import java.math.*;
 import java.util.*;
 import java.io.*;
 import com.netscape.certsrv.base.*;
+import com.netscape.certsrv.ca.ICertificateAuthority;
 import com.netscape.certsrv.profile.*;
 import com.netscape.certsrv.authority.*;
 import com.netscape.certsrv.request.*;
@@ -147,6 +148,7 @@ public abstract class EnrollProfile extends BasicProfile
     public abstract X500Name getIssuerName();
 
     public void setDefaultCertInfo(IRequest req) throws EProfileException {
+
         // create an empty certificate template so that
         // default plugins that store stuff
         X509CertInfo info = new X509CertInfo();
@@ -169,8 +171,21 @@ public abstract class EnrollProfile extends BasicProfile
                 new CertificateVersion(CertificateVersion.V3));
             info.set(X509CertInfo.SERIAL_NUMBER, 
                 new CertificateSerialNumber(new BigInteger("0")));
-            info.set(X509CertInfo.ISSUER, 
-                new CertificateIssuerName(issuerName));
+
+            ICertificateAuthority authority = (ICertificateAuthority) getAuthority();
+            CertificateIssuerName issuer = authority.getIssuerObj();
+
+            if (issuer != null) {
+                // this ensures the isserDN has the same encoding as the
+                // subjectDN of the CA signing cert
+                CMS.debug("EnrollProfile: setDefaultCertInfo: reusing issuer object: " + issuer);
+                info.set(X509CertInfo.ISSUER, issuer);
+
+            } else {
+                CMS.debug("EnrollProfile: setDefaultCertInfo: creating new issuer object: " + issuerName);
+                info.set(X509CertInfo.ISSUER, new CertificateIssuerName(issuerName));
+            }
+
             info.set(X509CertInfo.KEY,
                 new CertificateX509Key(X509Key.parse(new DerValue(dummykey))));
             info.set(X509CertInfo.SUBJECT, 
diff --git a/base/common/src/com/netscape/cms/servlet/csadmin/CertUtil.java b/base/common/src/com/netscape/cms/servlet/csadmin/CertUtil.java
index dc3437b1ae3b3178f2edf54f10ebcf82dea25146..045ad5179d19415aafb60e18e4c3161d86fae783 100644
--- a/base/common/src/com/netscape/cms/servlet/csadmin/CertUtil.java
+++ b/base/common/src/com/netscape/cms/servlet/csadmin/CertUtil.java
@@ -367,20 +367,43 @@ public class CertUtil {
             }
             ca = (ICertificateAuthority) CMS.getSubsystem(
                     ICertificateAuthority.ID);
+            CertificateIssuerName issuerdnObj = ca.getIssuerObj();
+            CMS.debug("CertUtil: issuer DN: " + issuerdnObj);
+
             cr = (ICertificateRepository) ca.getCertificateRepository();
             BigInteger serialNo = cr.getNextSerialNumber();
             if (type.equals("selfsign")) {
+                CMS.debug("Creating selfsign cert");
                 CMS.debug("Creating local certificate... issuerdn=" + dn);
                 CMS.debug("Creating local certificate... dn=" + dn);
-                info = CryptoUtil.createX509CertInfo(x509key, serialNo, dn, dn,
-                        date, date, keyAlgorithm);
+
+                if (issuerdnObj != null) {
+                    // this ensures the isserDN has the same encoding as the
+                    // subjectDN of the CA signing cert
+                    CMS.debug("CertUtil: reusing issuer object: " + issuerdnObj);
+                    info = CryptoUtil.createX509CertInfo(x509key, serialNo,
+                        issuerdnObj, dn, date, date, keyAlgorithm);
+
+                } else {
+                    CMS.debug("CertUtil: creating new issuer object: " + dn);
+                    info = CryptoUtil.createX509CertInfo(x509key, serialNo,
+                        dn, dn, date, date, keyAlgorithm);
+                }
+
             } else { 
                 String issuerdn = config.getString("preop.cert.signing.dn", "");
                 CMS.debug("Creating local certificate... issuerdn=" + issuerdn);
                 CMS.debug("Creating local certificate... dn=" + dn);
 
-                info = CryptoUtil.createX509CertInfo(x509key, serialNo,
+                if (issuerdnObj != null) {
+                    CMS.debug("CertUtil: reusing issuer object: " + issuerdnObj);
+                    info = CryptoUtil.createX509CertInfo(x509key, serialNo,
+                        issuerdnObj, dn, date, date, keyAlgorithm);
+                } else {
+                    CMS.debug("CertUtil: creating new issuer object: " + issuerdn);
+                    info = CryptoUtil.createX509CertInfo(x509key, serialNo,
                         issuerdn, dn, date, date, keyAlgorithm);
+                }
             }
             CMS.debug("Cert Template: " + info.toString());
 
diff --git a/base/util/src/com/netscape/cmsutil/crypto/CryptoUtil.java b/base/util/src/com/netscape/cmsutil/crypto/CryptoUtil.java
index b1dbf93b13968c0a28259247d3baf48b326739d4..c48812357f41fb0c3248b7592152a525800d6fbd 100644
--- a/base/util/src/com/netscape/cmsutil/crypto/CryptoUtil.java
+++ b/base/util/src/com/netscape/cmsutil/crypto/CryptoUtil.java
@@ -605,18 +605,33 @@ public class CryptoUtil {
     public static X509CertInfo createX509CertInfo(X509Key x509key,
             BigInteger serialno, String issuername, String subjname,
             Date notBefore, Date notAfter, String alg)
-        throws IOException, 
-                CertificateException, 
-                InvalidKeyException,
-                NoSuchAlgorithmException {
+            throws IOException,
+            CertificateException,
+            InvalidKeyException,
+            NoSuchAlgorithmException {
+            CertificateIssuerName issuernameObj =
+                    new CertificateIssuerName(new X500Name(issuername));
+            return createX509CertInfo(x509key, serialno, issuernameObj, subjname, notBefore, notAfter, alg);
+    }
+
+    public static X509CertInfo createX509CertInfo(X509Key x509key,
+            BigInteger serialno, CertificateIssuerName issuernameObj, String subjname,
+            Date notBefore, Date notAfter, String alg)
+            throws IOException,
+            CertificateException,
+            InvalidKeyException,
+            NoSuchAlgorithmException {
         X509CertInfo info = new X509CertInfo();
 
         info.set(X509CertInfo.VERSION, new
                 CertificateVersion(CertificateVersion.V3));
         info.set(X509CertInfo.SERIAL_NUMBER, new
                 CertificateSerialNumber(serialno));
-        info.set(X509CertInfo.ISSUER, new
-                CertificateIssuerName(new X500Name(issuername)));
+
+        if (issuernameObj != null) {
+            info.set(X509CertInfo.ISSUER, issuernameObj);
+        }
+
         info.set(X509CertInfo.SUBJECT, new
                 CertificateSubjectName(new X500Name(subjname)));
         info.set(X509CertInfo.VALIDITY, new
diff --git a/base/util/src/netscape/security/x509/X509CertImpl.java b/base/util/src/netscape/security/x509/X509CertImpl.java
index 4c5c6eb5317d6cb9f251e3a9eec40d1e79bdc6a9..5463fdab699296d5f9af03a673fab1ff7f35e012 100755
--- a/base/util/src/netscape/security/x509/X509CertImpl.java
+++ b/base/util/src/netscape/security/x509/X509CertImpl.java
@@ -720,6 +720,10 @@ implements Serializable, DerEncoder {
             }
     }
 
+    public CertificateSubjectName getSubjectObj() {
+        return info.getSubjectObj();
+    }
+
     /**
      * Gets the issuer distinguished name from the certificate.
      *
@@ -738,6 +742,10 @@ implements Serializable, DerEncoder {
             }
     }
 
+    public CertificateIssuerName getIssuerObj() {
+        return info.getIssuerObj();
+    }
+
     /**
      * Gets the notBefore date from the validity period of the certificate.
      *
diff --git a/base/util/src/netscape/security/x509/X509CertInfo.java b/base/util/src/netscape/security/x509/X509CertInfo.java
index 94019d8b089b90ccf51f16a4b22eda82c4aa2507..309dc462deec769ac8be5001dd8850c5bda50844 100644
--- a/base/util/src/netscape/security/x509/X509CertInfo.java
+++ b/base/util/src/netscape/security/x509/X509CertInfo.java
@@ -860,6 +860,10 @@ public class X509CertInfo implements CertAttrSet, Serializable {
         issuer = (CertificateIssuerName)val;
     }
 
+    public CertificateIssuerName getIssuerObj() {
+        return issuer;
+    }
+
     /**
      * Set the validity interval of the certificate.
      *
@@ -888,6 +892,10 @@ public class X509CertInfo implements CertAttrSet, Serializable {
         subject = (CertificateSubjectName)val;
     }
 
+    public CertificateSubjectName getSubjectObj() {
+        return subject;
+    }
+
     /**
      * Set the public key in the certificate.
      *
-- 
1.7.1

