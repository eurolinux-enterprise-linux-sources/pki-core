Index: base/ca/shared/webapps/ca/WEB-INF/web.xml
===================================================================
--- base/ca/shared/webapps/ca/WEB-INF/web.xml	(revision 2160)
+++ base/ca/shared/webapps/ca/WEB-INF/web.xml	(revision 2161)
@@ -10,6 +10,12 @@
             <param-name>https_port</param-name>
             <param-value>[PKI_AGENT_SECURE_PORT]</param-value>
         </init-param>
+[PKI_OPEN_ENABLE_PROXY_COMMENT]
+        <init-param>
+            <param-name>proxy_port</param-name>
+            <param-value>[PKI_PROXY_SECURE_PORT]</param-value>
+        </init-param>
+[PKI_CLOSE_ENABLE_PROXY_COMMENT]
         <init-param>
             <param-name>active</param-name>
             <param-value>true</param-value>
@@ -23,6 +29,12 @@
             <param-name>https_port</param-name>
             <param-value>[PKI_ADMIN_SECURE_PORT]</param-value>
         </init-param>
+[PKI_OPEN_ENABLE_PROXY_COMMENT]
+        <init-param>
+            <param-name>proxy_port</param-name>
+            <param-value>[PKI_PROXY_SECURE_PORT]</param-value>
+        </init-param>
+[PKI_CLOSE_ENABLE_PROXY_COMMENT]
         <init-param>
             <param-name>active</param-name>
             <param-value>true</param-value>
@@ -40,6 +52,16 @@
             <param-name>https_port</param-name>
             <param-value>[PKI_EE_SECURE_PORT]</param-value>
         </init-param>
+[PKI_OPEN_ENABLE_PROXY_COMMENT]
+        <init-param>
+            <param-name>proxy_port</param-name>
+            <param-value>[PKI_PROXY_SECURE_PORT]</param-value>
+        </init-param>
+        <init-param>
+            <param-name>proxy_http_port</param-name>
+            <param-value>[PKI_PROXY_UNSECURE_PORT]</param-value>
+        </init-param>
+[PKI_CLOSE_ENABLE_PROXY_COMMENT]
         <init-param>
             <param-name>active</param-name>
             <param-value>true</param-value>
@@ -53,6 +75,12 @@
             <param-name>https_port</param-name>
             <param-value>[PKI_EE_SECURE_CLIENT_AUTH_PORT]</param-value>
         </init-param>
+[PKI_OPEN_ENABLE_PROXY_COMMENT]
+        <init-param>
+            <param-name>proxy_port</param-name>
+            <param-value>[PKI_PROXY_SECURE_PORT]</param-value>
+        </init-param>
+[PKI_CLOSE_ENABLE_PROXY_COMMENT]
         <init-param>
             <param-name>active</param-name>
             <param-value>true</param-value>
Index: base/ca/shared/conf/proxy.conf
===================================================================
--- base/ca/shared/conf/proxy.conf	(revision 0)
+++ base/ca/shared/conf/proxy.conf	(revision 2161)
@@ -0,0 +1,34 @@
+ProxyRequests Off
+
+# matches for ee port
+<LocationMatch "^/ca/ee/*|^/ca/renewal|^/ca/certbasedenrollment|^/ca/ocsp|^/ca/enrollment|^/ca/profileSubmit|^/ca/cgi-bin/pkiclient.exe">
+    NSSOptions +StdEnvVars +ExportCertData +StrictRequire +OptRenegotiate
+    NSSVerifyClient none
+    ProxyPassMatch ajp://[PKI_MACHINE_NAME]:[PKI_AJP_PORT]/
+    ProxyPassReverse ajp://[PKI_MACHINE_NAME]:[PKI_AJP_PORT]/
+</LocationMatch>
+
+# matches for admin port 
+<LocationMatch "^/ca/admin/*|^/ca/auths|^/ca/acl|^/ca/server|^/ca/caadmin|^/ca/caprofile|^/ca/jobsScheduler|^/ca/capublisher|^/ca/log|^/ca/ug">
+    NSSOptions +StdEnvVars +ExportCertData +StrictRequire +OptRenegotiate
+    NSSVerifyClient none
+    ProxyPassMatch ajp://[PKI_MACHINE_NAME]:[PKI_AJP_PORT]/
+    ProxyPassReverse ajp://[PKI_MACHINE_NAME]:[PKI_AJP_PORT]/
+</LocationMatch>
+
+# matches for agent port and eeca port
+<LocationMatch "^/ca/agent/*|^/ca/ca/getCertFromRequest|^/ca/ca/GetBySerial|^/ca/ca/connector|/ca/ca/displayCertFromRequest|^/ca/doRevoke|^/ca/eeca/*">
+    NSSOptions +StdEnvVars +ExportCertData +StrictRequire +OptRenegotiate
+    NSSVerifyClient require
+    ProxyPassMatch ajp://[PKI_MACHINE_NAME]:[PKI_AJP_PORT]/
+    ProxyPassReverse ajp://[PKI_MACHINE_NAME]:[PKI_AJP_PORT]/
+</LocationMatch>
+
+# static content
+<LocationMatch "^/graphics/*">
+    NSSOptions +StdEnvVars +ExportCertData +StrictRequire +OptRenegotiate
+    NSSVerifyClient none
+    ProxyPassMatch ajp://[PKI_MACHINE_NAME]:[PKI_AJP_PORT]/
+    ProxyPassReverse ajp://[PKI_MACHINE_NAME]:[PKI_AJP_PORT]/
+</LocationMatch>
+
Index: base/ca/shared/conf/server.xml
===================================================================
--- base/ca/shared/conf/server.xml	(revision 2160)
+++ base/ca/shared/conf/server.xml	(revision 2161)
@@ -209,10 +209,10 @@
                clientAuth="false" sslProtocol="TLS" />
     -->
 
-    <!-- Define an AJP 1.3 Connector on port 8009 -->
-<!--
-    <Connector port="8009" protocol="AJP/1.3" redirectPort="8443" />
--->
+    <!-- Define an AJP 1.3 Connector on port [PKI_AJP_PORT] -->
+[PKI_OPEN_AJP_PORT_COMMENT]
+    <Connector port="[PKI_AJP_PORT]" protocol="AJP/1.3" redirectPort="[PKI_AJP_REDIRECT_PORT]" />
+[PKI_CLOSE_AJP_PORT_COMMENT]
 
 
     <!-- An Engine represents the entry point (within Catalina) that processes
Index: base/ca/shared/conf/CS.cfg.in
===================================================================
--- base/ca/shared/conf/CS.cfg.in	(revision 2160)
+++ base/ca/shared/conf/CS.cfg.in	(revision 2161)
@@ -21,6 +21,8 @@
 preop.product.version=@VERSION@
 preop.system.name=CA
 preop.system.fullname=Certificate Authority
+proxy.securePort=[PKI_PROXY_SECURE_PORT]
+proxy.unsecurePort=[PKI_PROXY_UNSECURE_PORT]
 cs.state=0
 cs.type=CA
 authType=pwd
Index: base/selinux/src/pki.if
===================================================================
--- base/selinux/src/pki.if	(revision 2160)
+++ base/selinux/src/pki.if	(revision 2161)
@@ -22,6 +22,7 @@
                 type rpm_var_lib_t;
                 type rpm_exec_t;
 		type setfiles_t;
+                type httpd_t;
 	')
 	########################################
 	#
@@ -189,6 +190,8 @@
        # allow writing to the kernel keyring
        allow $1_t self:key { write read };
 
+       #reverse proxy
+       corenet_tcp_connect_dogtag_port($1_t)
 
 ')
 
Index: base/selinux/src/pki.te
===================================================================
--- base/selinux/src/pki.te	(revision 2160)
+++ base/selinux/src/pki.te	(revision 2161)
@@ -1,4 +1,4 @@
-policy_module(pki,6.2.1)
+policy_module(pki,6.2.2)
 
 attribute pki_ca_config;
 attribute pki_ca_executable;
@@ -22,6 +22,9 @@
 corenet_tcp_connect_pki_kra_port(pki_ca_t)
 corenet_tcp_connect_pki_ocsp_port(pki_ca_t)
 
+# forward proxy
+corenet_tcp_connect_pki_ca_port(httpd_t)
+
 # for crl publishing
 allow pki_ca_t pki_ca_var_lib_t:lnk_file { rename create unlink };
 
@@ -43,6 +46,9 @@
 pki_ca_template(pki_kra)
 corenet_tcp_connect_pki_ca_port(pki_kra_t)
 
+# forward proxy
+corenet_tcp_connect_pki_kra_port(httpd_t)
+
 attribute pki_ocsp_config;
 attribute pki_ocsp_executable;
 attribute pki_ocsp_var_lib;
@@ -58,6 +64,9 @@
 pki_ca_template(pki_ocsp)
 corenet_tcp_connect_pki_ca_port(pki_ocsp_t)
 
+# forward proxy
+corenet_tcp_connect_pki_ocsp_port(httpd_t)
+
 attribute pki_ra_config;
 attribute pki_ra_executable;
 attribute pki_ra_var_lib;
@@ -87,6 +96,9 @@
 pki_ca_template(pki_tks)
 corenet_tcp_connect_pki_ca_port(pki_tks_t)
 
+# forward proxy
+corenet_tcp_connect_pki_tks_port(httpd_t)
+
 # needed for token enrollment, list /var/cache/tomcat5/temp
 files_list_var(pki_tks_t)
 
Index: base/common/src/com/netscape/cms/servlet/filter/AdminRequestFilter.java
===================================================================
--- base/common/src/com/netscape/cms/servlet/filter/AdminRequestFilter.java	(revision 2160)
+++ base/common/src/com/netscape/cms/servlet/filter/AdminRequestFilter.java	(revision 2161)
@@ -26,6 +26,7 @@
     private static final String HTTPS_SCHEME = "https";
     private static final String HTTPS_PORT = "https_port";
     private static final String HTTPS_ROLE = "Admin";
+    private static final String PROXY_PORT = "proxy_port";
 
     private FilterConfig config;
     
@@ -51,6 +52,7 @@
 
         String request_port = null;
         String param_https_port = null;
+        String param_proxy_port = null;
         String msg = null;
         String param_active = null;
 
@@ -84,12 +86,27 @@
                 return;
             }
 
+            param_proxy_port = config.getInitParameter(PROXY_PORT);
+            boolean bad_port = false;
+
             // Compare the request and param "https" ports
             if( ! param_https_port.equals( request_port ) ) {
                 String uri = ((HttpServletRequest) request).getRequestURI(); 
+                if (param_proxy_port != null) {  
+                    if (!param_proxy_port.equals(request_port)) {
                 msg = "Use HTTPS port '" + param_https_port
+                            + "' or proxy port '" + param_proxy_port
                     + "' instead of '" + request_port
                     + "' when performing " + HTTPS_ROLE + " tasks!";
+                        bad_port = true;
+                    }
+                } else {
+                    msg = "Use HTTPS port '" + param_https_port
+                        + "' instead of '" + request_port
+                        + "' when performing " + HTTPS_ROLE + " tasks!";
+                    bad_port = true;
+                }
+                if (bad_port) {
                 CMS.debug( filterName + ":  " + msg );
                 CMS.debug( filterName + ": uri is " + uri);
                 if ((param_active != null) &&(param_active.equals("false"))) {
@@ -100,6 +117,8 @@
                 }
             }
         }
+        }
+
         // CMS.debug("Exiting the admin filter");
 
         chain.doFilter( request, response );
Index: base/common/src/com/netscape/cms/servlet/filter/EERequestFilter.java
===================================================================
--- base/common/src/com/netscape/cms/servlet/filter/EERequestFilter.java	(revision 2160)
+++ base/common/src/com/netscape/cms/servlet/filter/EERequestFilter.java	(revision 2161)
@@ -29,6 +29,8 @@
     private static final String HTTPS_SCHEME = "https";
     private static final String HTTPS_PORT = "https_port";
     private static final String HTTPS_ROLE = "EE";
+    private static final String PROXY_PORT = "proxy_port";
+    private static final String PROXY_HTTP_PORT = "proxy_http_port";
 
     private FilterConfig config;
     
@@ -55,6 +57,8 @@
         String request_port = null;
         String param_http_port = null;
         String param_https_port = null;
+        String param_proxy_port = null;
+        String param_proxy_http_port = null;
         String msg = null;
         String param_active = null;
 
@@ -100,6 +104,10 @@
                 return; 
             }
 
+            param_proxy_http_port = config.getInitParameter(PROXY_HTTP_PORT);
+            param_proxy_port = config.getInitParameter(PROXY_PORT);
+            boolean bad_port = false;
+
             // If the scheme is "http", compare
             // the request and param "http" ports;
             // otherwise, if the scheme is "https", compare
@@ -107,9 +115,21 @@
             if( scheme.equals( HTTP_SCHEME ) ) {
                 if( ! param_http_port.equals( request_port ) ) {
                     String uri = ((HttpServletRequest) request).getRequestURI();
+                    if (param_proxy_http_port != null) {  
+                        if (!param_proxy_http_port.equals(request_port)) {
                     msg = "Use HTTP port '" + param_http_port
+                                + "' or proxy port '" + param_proxy_http_port
                         + "' instead of '" + request_port
                         + "' when performing " + HTTP_ROLE + " tasks!";
+                            bad_port = true;
+                        }
+                    } else {
+                        msg = "Use HTTP port '" + param_http_port
+                            + "' instead of '" + request_port
+                            + "' when performing " + HTTP_ROLE + " tasks!";
+                        bad_port = true;
+                    }
+                    if (bad_port) {
                     CMS.debug( filterName + ":  " + msg );
                     CMS.debug( filterName + ": uri is " + uri);
                     if ((param_active != null) &&(param_active.equals("false"))) {
@@ -119,12 +139,27 @@
                         return;
                     }
                 }
+                }
             } else if( scheme.equals( HTTPS_SCHEME ) ) {
                 if( ! param_https_port.equals( request_port ) ) {
+                    String uri = ((HttpServletRequest) request).getRequestURI();
+                    if (param_proxy_port != null) {  
+                        if (!param_proxy_port.equals(request_port)) {
                     msg = "Use HTTPS port '" + param_https_port
+                                + "' or proxy port '" + param_proxy_port
                         + "' instead of '" + request_port
                         + "' when performing " + HTTPS_ROLE + " tasks!";
+                            bad_port = true;
+                        }
+                    } else {
+                        msg = "Use HTTPS port '" + param_https_port
+                            + "' instead of '" + request_port
+                            + "' when performing " + HTTPS_ROLE + " tasks!";
+                        bad_port = true;
+                    }
+                    if (bad_port) {
                     CMS.debug( filterName + ":  " + msg );
+                        CMS.debug( filterName + ": uri is " + uri);
                     if ((param_active != null) &&(param_active.equals("false"))) {
                         CMS.debug("Filter is disabled .. continuing");
                     } else {
@@ -134,6 +169,8 @@
                 }
             }
         }
+
+        }
         // CMS.debug("Exiting the EE filter");
 
         chain.doFilter( request, response );
Index: base/common/src/com/netscape/cms/servlet/filter/EEClientAuthRequestFilter.java
===================================================================
--- base/common/src/com/netscape/cms/servlet/filter/EEClientAuthRequestFilter.java	(revision 2160)
+++ base/common/src/com/netscape/cms/servlet/filter/EEClientAuthRequestFilter.java	(revision 2161)
@@ -26,6 +26,7 @@
     private static final String HTTPS_SCHEME = "https";
     private static final String HTTPS_PORT = "https_port";
     private static final String HTTPS_ROLE = "EE Client Auth";
+    private static final String PROXY_PORT = "proxy_port";
 
     private FilterConfig config;
     
@@ -53,6 +54,7 @@
         String param_https_port = null;
         String msg = null;
         String param_active = null;
+        String param_proxy_port = null;
 
         // CMS.debug("Entering the EECA filter");
         param_active = config.getInitParameter( "active");
@@ -84,14 +86,29 @@
                 return;
             }
 
+            param_proxy_port = config.getInitParameter(PROXY_PORT);
+            boolean bad_port = false;
+
             // Compare the request and param "https" ports
             if( ! param_https_port.equals( request_port ) ) {
                 String uri = ((HttpServletRequest) request).getRequestURI();
+                if (param_proxy_port != null) {
+                    if (!param_proxy_port.equals(request_port)) {
+                        msg = "Use HTTPS port '" + param_https_port
+                            + "' or proxy port '" + param_proxy_port
+                            + "' instead of '" + request_port
+                            + "' when performing " + HTTPS_ROLE + " tasks!";
+                        bad_port = true;
+                    }
+                } else {
                 msg = "Use HTTPS port '" + param_https_port
                     + "' instead of '" + request_port
                     + "' when performing " + HTTPS_ROLE + " tasks!";
+                    bad_port = true;
+                }
+                if (bad_port) {
                 CMS.debug( filterName + ":  " + msg );
-                CMS.debug( filterName + ": uri is " + msg);
+                    CMS.debug( filterName + ": uri is " + uri);
                 if ((param_active != null) &&(param_active.equals("false"))) {
                     CMS.debug("Filter is disabled .. continuing");
                 } else {
@@ -100,6 +117,7 @@
                 }
             }
         }
+        }
        // CMS.debug("exiting the EECA filter");
 
         chain.doFilter( request, response );
Index: base/common/src/com/netscape/cms/servlet/filter/AgentRequestFilter.java
===================================================================
--- base/common/src/com/netscape/cms/servlet/filter/AgentRequestFilter.java	(revision 2160)
+++ base/common/src/com/netscape/cms/servlet/filter/AgentRequestFilter.java	(revision 2161)
@@ -26,6 +26,7 @@
     private static final String HTTPS_SCHEME = "https";
     private static final String HTTPS_PORT = "https_port";
     private static final String HTTPS_ROLE = "Agent";
+    private static final String PROXY_PORT = "proxy_port";
 
     private FilterConfig config;
     
@@ -51,6 +52,7 @@
 
         String request_port = null;
         String param_https_port = null;
+        String param_proxy_port = null;
         String msg = null;
 
         String param_active = null;
@@ -85,12 +87,27 @@
                 return;
             }
 
+            param_proxy_port = config.getInitParameter(PROXY_PORT);
+            boolean bad_port = false;
+
             // Compare the request and param "https" ports
             if( ! param_https_port.equals( request_port ) ) {
                 String uri = ((HttpServletRequest) request).getRequestURI();
+                if (param_proxy_port != null) {
+                    if (!param_proxy_port.equals(request_port)) {
+                        msg = "Use HTTPS port '" + param_https_port
+                            + "' or proxy port '" + param_proxy_port 
+                            + "' instead of '" + request_port
+                            + "' when performing " + HTTPS_ROLE + " tasks!";
+                        bad_port = true;
+                    }
+                } else {
                 msg = "Use HTTPS port '" + param_https_port
                     + "' instead of '" + request_port
                     + "' when performing " + HTTPS_ROLE + " tasks!";
+                    bad_port = true;
+                }
+                if (bad_port) {
                 CMS.debug( filterName + ":  " + msg );
                 CMS.debug( filterName + ": uri is " + uri);
                 if ((param_active != null) &&(param_active.equals("false"))) {
@@ -101,6 +118,7 @@
                 }
             }
         }
+        }
         // CMS.debug("Exiting the Agent filter");
 
         chain.doFilter( request, response );
Index: base/common/src/com/netscape/cms/servlet/csadmin/ImportCAChainPanel.java
===================================================================
--- base/common/src/com/netscape/cms/servlet/csadmin/ImportCAChainPanel.java	(revision 2160)
+++ base/common/src/com/netscape/cms/servlet/csadmin/ImportCAChainPanel.java	(revision 2161)
@@ -101,10 +101,12 @@
         IConfigStore cs = CMS.getConfigStore();
         try {
             context.put("machineName", cs.getString("machineName"));
-            context.put("https_port", CMS.getEESSLPort());
-            context.put("http_port", CMS.getEENonSSLPort());
-        } catch (EBaseException e) {}
-
+            context.put("https_port", cs.getString("pkicreate.ee_secure_port"));
+            context.put("http_port", cs.getString("pkicreate.unsecure_port"));
+        } catch (EBaseException e) {
+            CMS.debug("ImportCACertChain:display: Exception: " + e.toString()); 
+            context.put("errorString", "Error loading values for Import CA Certificate Panel");
+        }
 
         ISubsystem ca = (ISubsystem) CMS.getSubsystem("ca");
 
@@ -150,8 +152,8 @@
         IConfigStore cs = CMS.getConfigStore();
         try {
             context.put("machineName", cs.getString("machineName"));
-            context.put("https_port", CMS.getEESSLPort());
-            context.put("http_port", CMS.getEENonSSLPort());
+            context.put("https_port", cs.getString("pkicreate.ee_secure_port"));
+            context.put("http_port", cs.getString("pkicreate.unsecure_port"));
             context.put("title", "Import CA's Certificate Chain");
             context.put("panel", "admin/console/config/importcachainpanel.vm");
         } catch (EBaseException e) {}
Index: base/common/src/com/netscape/cmscore/apps/CMSEngine.java
===================================================================
--- base/common/src/com/netscape/cmscore/apps/CMSEngine.java	(revision 2160)
+++ base/common/src/com/netscape/cmscore/apps/CMSEngine.java	(revision 2161)
@@ -323,6 +323,7 @@
             }
         }
         parseServerXML();
+        fixProxyPorts();
     }
 
     /**
@@ -543,6 +544,27 @@
            }
     }
 
+    private void fixProxyPorts() throws EBaseException {
+        try {
+            String port = mConfig.getString("proxy.securePort", "");
+            if (!port.equals("")) {
+                info[EE_SSL][PORT] = port;
+                info[ADMIN][PORT] = port;
+                info[AGENT][PORT] = port;
+                info[EE_CLIENT_AUTH_SSL][PORT] = port;
+            }
+
+            port = mConfig.getString("proxy.unsecurePort", "");
+            if (!port.equals("")) {
+                info[EE_NON_SSL][PORT] = port;
+            }
+        } catch (EBaseException e) {
+            CMS.debug("CMSEngine: fixProxyPorts exception: " + e.toString());
+            throw e;
+        }   
+    }
+
+
     public IConfigStore createFileConfigStore(String path) throws EBaseException {
         try {
           /* if the file is not there, create one */
Index: base/setup/pkicommon.pm
===================================================================
--- base/setup/pkicommon.pm	(revision 2160)
+++ base/setup/pkicommon.pm	(revision 2161)
@@ -1214,7 +1214,8 @@
 {
     # parse parameters
     my ($secure_port, $unsecure_port, $agent_secure_port, 
-        $ee_secure_port, $admin_secure_port) = @_;
+        $ee_secure_port, $admin_secure_port, $proxy_secure_port, 
+        $proxy_unsecure_port, $ajp_port) = @_;
 
 
     if ($secure_port == -1 && $agent_secure_port == -1)
@@ -1236,11 +1237,8 @@
         return 1;
     }
 
-    # Now make sure none of the separated ports are the same
-    if (($agent_secure_port == $admin_secure_port) || 
-        ($agent_secure_port == $ee_secure_port)   ||
-        ($ee_secure_port == $admin_secure_port)) 
-    {
+    if (!portsUnique($agent_secure_port,$ee_secure_port, $admin_secure_port, $proxy_secure_port, 
+        $proxy_unsecure_port, $ajp_port)) {
         return 0;
     }
 
@@ -1248,6 +1246,21 @@
     
 }
 
+#return 1 - if non-negative ports are uique
+#return 0 - otherwise (failure)
+sub portsUnique
+{
+   my @ports = sort @_;
+   my $last_port = -1;
+   for my $port (@ports) {
+       next if ($port < 0);
+       if ($port == $last_port) {
+           return 0;
+       }
+       $last_port = $port;
+   }
+   return 1;
+}
 
 # return 1 - port is available (success)
 # return 0 - port is unavailable; report an error (failure)
Index: base/setup/pkicreate
===================================================================
--- base/setup/pkicreate	(revision 2160)
+++ base/setup/pkicreate	(revision 2161)
@@ -221,6 +221,7 @@
 my $velocity_prop_base_name       = "velocity.properties";    # CA, KRA, OCSP, TKS
 my $web_xml_base_name             = "web.xml";                # CA, KRA, OCSP, TKS
 my $profile_select_base_name      = "ProfileSelect.template"; # CA
+my $proxy_conf_base_name          = "proxy.conf";             # CA
 
 my $registry_template_base_name   = "registry_instance";      # CA, KRA, OCSP, TKS, RA, TPS
 my $pki_apache_initscript_base_name = "pki_apache_initscript"; # RA, TPS
@@ -291,6 +292,7 @@
 my $PKI_SECURE_PORT_SLOT                = "PKI_SECURE_PORT";
 my $PKI_EE_SECURE_PORT_SLOT             = "PKI_EE_SECURE_PORT";
 my $PKI_EE_SECURE_CLIENT_AUTH_PORT_SLOT = "PKI_EE_SECURE_CLIENT_AUTH_PORT";
+my $PKI_EE_SECURE_CLIENT_AUTH_PORT_UI_SLOT = "PKI_EE_SECURE_CLIENT_AUTH_PORT_UI";
 my $PKI_AGENT_SECURE_PORT_SLOT          = "PKI_AGENT_SECURE_PORT";
 my $PKI_ADMIN_SECURE_PORT_SLOT          = "PKI_ADMIN_SECURE_PORT";
 my $PKI_SERVER_XML_CONF                 = "PKI_SERVER_XML_CONF";
@@ -322,6 +324,14 @@
 my $PKI_CLOSE_SEPARATE_PORTS_COMMENT_SERVER_SLOT       = "PKI_CLOSE_SEPARATE_PORTS_SERVER_COMMENT";
 my $PKI_OPEN_SEPARATE_PORTS_COMMENT_WEB_SLOT           = "PKI_OPEN_SEPARATE_PORTS_WEB_COMMENT";
 my $PKI_CLOSE_SEPARATE_PORTS_COMMENT_WEB_SLOT          = "PKI_CLOSE_SEPARATE_PORTS_WEB_COMMENT";
+my $PKI_OPEN_AJP_PORT_COMMENT_SLOT                     = "PKI_OPEN_AJP_PORT_COMMENT";
+my $PKI_CLOSE_AJP_PORT_COMMENT_SLOT                    = "PKI_CLOSE_AJP_PORT_COMMENT";
+my $PKI_OPEN_ENABLE_PROXY_COMMENT_SLOT                 = "PKI_OPEN_ENABLE_PROXY_COMMENT";
+my $PKI_CLOSE_ENABLE_PROXY_COMMENT_SLOT                = "PKI_CLOSE_ENABLE_PROXY_COMMENT";
+my $PKI_AJP_REDIRECT_PORT_SLOT                         = "PKI_AJP_REDIRECT_PORT";
+my $PKI_AJP_PORT_SLOT                                  = "PKI_AJP_PORT";
+my $PROXY_SECURE_PORT_SLOT                             = "PKI_PROXY_SECURE_PORT";
+my $PROXY_UNSECURE_PORT_SLOT                           = "PKI_PROXY_UNSECURE_PORT";
 my $PKI_UNSECURE_PORT_NAME                  = "Unsecure";
 my $PKI_AGENT_SECURE_PORT_NAME              = "Agent";
 my $PKI_ADMIN_SECURE_PORT_NAME              = "Admin";
@@ -347,6 +357,11 @@
 my $SELINUX_PORT_DEFINED         = 1;
 my $SELINUX_PORT_WRONGLY_DEFINED = 2;
 
+#proxy defaults
+my $PROXY_SECURE_PORT_DEFAULT   = "443";
+my $PROXY_UNSECURE_PORT_DEFAULT = "80";
+my $AJP_PORT_DEFAULT            = "9447";
+
 ##############################################################
 # Local Data Structures
 ##############################################################
@@ -376,6 +391,10 @@
 my $ee_secure_port             = -1;
 my $ee_secure_client_auth_port = -1;
 my $admin_secure_port          = -1;
+my $proxy_secure_port          = -1;
+my $proxy_unsecure_port        = -1;
+my $ajp_port                   = -1;
+my $enable_proxy               = undef;
 my $username                   = undef;
 my $groupname                  = undef;
 my $redirected_conf_path       = undef;
@@ -528,6 +547,8 @@
 my $webinf_subsystem_path                        = undef;  # CA, KRA, OCSP, TKS
 my $profile_select_template_subsystem_file_path  = undef; #CA
 my $profile_select_template_instance_file_path   = undef;  #CA
+my $proxy_conf_subsystem_file_path               = undef;  #CA
+my $proxy_conf_instance_file_path                = undef;  #CA
 
 # PKI init script variables
 my $pki_registry_initscript                   = undef;  # CA, KRA, OCSP, TKS, RA, TPS
@@ -664,6 +685,25 @@
           -tomcat_server_port=<tomcat_server_port> # Unique port for each
                                                    # Tomcat instance
 
+          #####################################################################
+          ###  proxy configuration                                          ###
+          ###  if -enable_proxy is set, ajp_port, proxy_secure_port, and    ###
+          ###  proxy_unsecure_port are also set.                            ###
+          #####################################################################
+
+          [-enable_proxy]                            #enable proxy configuration
+          [-ajp_port=<ajp_port>]                     #AJP port, default 9447
+
+          [-proxy_secure_port=<proxy_secure_port>]   # Proxy secure port, 
+                                                     # default 443
+
+          [-proxy_unsecure_port=<unsecure_port>]     # Proxy unsecure port,
+                                                     # default 80
+
+          #####################################################################
+          ###   END proxy configuration                                     ###
+          #####################################################################
+
           [-user=<username>]                       # User ownership
                                                    # (must ALSO specify
                                                    #  group ownership)
@@ -912,6 +952,9 @@
     my $l_ee_secure_port     = -1;
     my $l_ee_secure_client_auth_port     = -1;
     my $l_admin_secure_port  = -1;
+    my $l_proxy_secure_port  = -1;
+    my $l_proxy_unsecure_port  = -1;
+    my $l_ajp_port  = -1;
     my $show_help            = 0;
 
     my $result = GetOptions("help"                         => \$show_help,
@@ -926,6 +969,10 @@
                             "ee_secure_client_auth_port:i" => \$l_ee_secure_client_auth_port,
                             "admin_secure_port:i"          => \$l_admin_secure_port, 
                             "tomcat_server_port:i"         => \$l_tomcat_server_port,
+                            "proxy_secure_port:i"          => \$l_proxy_secure_port,
+                            "proxy_unsecure_port:i"        => \$l_proxy_unsecure_port,
+                            "ajp_port:i"                   => \$l_ajp_port,
+                            "enable_proxy"                 => \$enable_proxy,
                             "user=s"                       => \$username,
                             "group=s"                      => \$groupname,
                             "verbose+"                     => \$verbose,
@@ -1182,8 +1229,23 @@
         }
     }
 
+    if ($enable_proxy) {
+
+        $proxy_secure_port = ($l_proxy_secure_port >= 0) ? $l_proxy_secure_port : 
+            $PROXY_SECURE_PORT_DEFAULT;
+        emit("    proxy_secure_port   $proxy_secure_port\n");
+
+        $proxy_unsecure_port = ($l_proxy_unsecure_port >= 0) ? $l_proxy_unsecure_port : 
+            $PROXY_UNSECURE_PORT_DEFAULT;
+        emit("    proxy_unsecure_port   $proxy_unsecure_port\n");
+
+        $ajp_port = ($l_ajp_port >= 0) ? $l_ajp_port : $AJP_PORT_DEFAULT;  
+        emit("    ajp_port   $ajp_port\n");
+    }
+ 
     if (!AreConnectorPortsValid($secure_port,$unsecure_port,$agent_secure_port,
-         $ee_secure_port,$ee_secure_client_auth_port, $admin_secure_port))
+         $ee_secure_port,$ee_secure_client_auth_port, $admin_secure_port, 
+         $proxy_secure_port, $proxy_unsecure_port))
     {
         usage();
         emit("Invalid port numbers submitted!\n","error");
@@ -1543,6 +1605,9 @@
         $profile_select_template_instance_file_path = $webapps_subsystem_instance_path
                                                      . "/ee/". $subsystem_type 
                                                      . "/" . $profile_select_base_name;
+
+        $proxy_conf_subsystem_file_path             = $conf_subsystem_path 
+                                                     . "/" . $proxy_conf_base_name;
     }
 
     ## Initialize subdirectory paths (RA, TPS subsystems)
@@ -1897,6 +1962,8 @@
                                           . "/" . $pfile_base_name;
         $pki_cfg_instance_file_path       = $conf_instance_path
                                           . "/" . $pki_cfg_base_name;
+        $proxy_conf_instance_file_path    = $conf_instance_path
+                                          . "/" . $proxy_conf_base_name;
         $catalina_properties_instance_file_path = $conf_instance_path
                                                 . "/" . $catalina_properties_base_name;
 
@@ -1944,6 +2011,8 @@
                                           . "/" . $pfile_base_name;
         $pki_cfg_instance_file_path       = $redirected_conf_path
                                           . "/" . $pki_cfg_base_name;
+        $proxy_conf_instance_file_path    = $redirected_conf_path
+                                          . "/" . $proxy_conf_base_name;
         $catalina_properties_instance_file_path = $redirected_conf_path
                                                 . "/" . $catalina_properties_base_name;
 
@@ -2342,6 +2411,7 @@
             $slot_hash{$PKI_AGENT_SECURE_PORT_SLOT} = $agent_secure_port;
             $slot_hash{$PKI_EE_SECURE_PORT_SLOT}    = $ee_secure_port; 
             $slot_hash{$PKI_EE_SECURE_CLIENT_AUTH_PORT_SLOT}    = $ee_secure_client_auth_port; 
+            $slot_hash{$PKI_EE_SECURE_CLIENT_AUTH_PORT_UI_SLOT} = $ee_secure_client_auth_port; 
             $slot_hash{$PKI_ADMIN_SECURE_PORT_SLOT} = $admin_secure_port;
 
             # Comment "Port Separation" appropriately
@@ -2375,6 +2445,7 @@
             $slot_hash{$PKI_AGENT_SECURE_PORT_SLOT} = $secure_port;
             $slot_hash{$PKI_EE_SECURE_PORT_SLOT}    = $secure_port; 
             $slot_hash{$PKI_EE_SECURE_CLIENT_AUTH_PORT_SLOT}    = $secure_port; 
+            $slot_hash{$PKI_EE_SECURE_CLIENT_AUTH_PORT_UI_SLOT}    = $secure_port; 
             $slot_hash{$PKI_ADMIN_SECURE_PORT_SLOT} = $secure_port;
 
             # Comment "Shared Ports" appropriately
@@ -2396,6 +2467,30 @@
             $slot_hash{$PKI_CLOSE_SEPARATE_PORTS_COMMENT_WEB_SLOT} = $PKI_CLOSE_COMMENT;
         } 
 
+        if ($enable_proxy) {
+            if ($use_port_separation) {
+                $slot_hash{$PKI_AJP_REDIRECT_PORT_SLOT}  = $ee_secure_port;
+            } else {
+                $slot_hash{$PKI_AJP_REDIRECT_PORT_SLOT}  = $secure_port;
+            }
+            $slot_hash{$PKI_EE_SECURE_CLIENT_AUTH_PORT_UI_SLOT} = $proxy_secure_port; 
+            $slot_hash{$PKI_AJP_PORT_SLOT}                      = $ajp_port;
+            $slot_hash{$PKI_OPEN_AJP_PORT_COMMENT_SLOT}         = "";
+            $slot_hash{$PKI_CLOSE_AJP_PORT_COMMENT_SLOT}        = "";
+            $slot_hash{$PKI_OPEN_ENABLE_PROXY_COMMENT_SLOT}     = "";
+            $slot_hash{$PKI_CLOSE_ENABLE_PROXY_COMMENT_SLOT}    = "";
+        } else {
+            $slot_hash{$PKI_OPEN_AJP_PORT_COMMENT_SLOT}      = $PKI_OPEN_COMMENT;
+            $slot_hash{$PKI_CLOSE_AJP_PORT_COMMENT_SLOT}     = $PKI_CLOSE_COMMENT;
+            $slot_hash{$PKI_OPEN_ENABLE_PROXY_COMMENT_SLOT}  = $PKI_OPEN_COMMENT;
+            $slot_hash{$PKI_CLOSE_ENABLE_PROXY_COMMENT_SLOT} = $PKI_CLOSE_COMMENT;
+        }
+
+        $slot_hash{$PROXY_SECURE_PORT_SLOT}   = ($proxy_secure_port >=0) ? 
+            $proxy_secure_port : "";
+        $slot_hash{$PROXY_UNSECURE_PORT_SLOT} = ($proxy_unsecure_port>=0) ? 
+            $proxy_unsecure_port : "";
+
         $slot_hash{$PKI_WEBAPPS_NAME}          = $webapps_base_subsystem_dir; 
         $slot_hash{$PKI_FLAVOR_SLOT}           = $pki_flavor;
         $slot_hash{$TOMCAT_SERVER_PORT_SLOT}   = $tomcat_server_port;
@@ -2466,6 +2561,11 @@
                                            $profile_select_template_subsystem_file_path,
                                            $profile_select_template_instance_file_path,
                                            \%slot_hash);
+        # process proxy.conf file
+        return 0 if !process_file_template("proxy_conf",
+                                           $proxy_conf_subsystem_file_path,
+                                           $proxy_conf_instance_file_path,
+                                           \%slot_hash);
      }
 
 
@@ -3069,6 +3169,9 @@
     if ($admin_secure_port != -1) {
         add_selinux_port($setype_p, $admin_secure_port, \$semanage_cmds);
     }
+    if ($ajp_port != -1) {
+        add_selinux_port($setype_p, $ajp_port, \$semanage_cmds);
+    }
 
     # now run the selinux commands in batch mode
     if ($semanage_cmds ne "") {
